/* Custom Elements for Waterbear blocks*/

wb-step, wb-context, wb-expression{
    display: inline-block;
    background-color: #EDE378;
    border-radius: 5px;
    border-color: #CEBD3E;
    border-width: 2px;
    border-style: solid;
    margin: 5px 5px 2px 2px;
    float: left;
    clear: left;
    position: relative;
}

body:not(.block-dragging) wb-step,
body:not(.block-dragging) wb-context,
body:not(.block-dragging) wb-expression {
    cursor: move;
    /* More appropriate, but less compatible. */
    cursor: -moz-grab;
    cursor: -webkit-grab;
}

wb-expression{
    border-radius: 0;
    text-align: right;
}



wb-value > wb-expression{
    float: none;
    clear: none;
}

wb-value select{
    min-width: 5em;
}

wb-step.dragging, wb-context.dragging, wb-expression.dragging{
    opacity: 0.5;
    position: absolute;
    /* Necessary for dragging events. */
    pointer-events: none;
}

/* This class is probably added on the body or the workspace container. */
.block-dragging {
    cursor: move;
    /* More appropriate, but less compatible. */
    cursor: -moz-grabbing;
    cursor: -webkit-grabbing;
}

wb-expression > header{
    margin-left: 15px;
}

wb-value{
    display: block;
    text-align: right;
    margin-left: 20px;
    white-space:nowrap;
}

wb-row{
    display: block;
    text-align: right;
    margin-left: 20px;
    white-space: nowrap;
}

wb-row > wb-value, wb-row > wb-local{
    display: inline-block;
    margin-left: 0;
}

wb-value > * {
    vertical-align: middle;
    margin: 0px 5px;
}


wb-value > input[type=color]{
    padding: 0 0 0 20px ;
}

wb-unit{
    display: inline-block;
}

wb-local{
    display: inline-block;
}

wb-local[fortype]{
    display: none;
}

wb-local[fortype].show{
    display: inline-block;
}

wb-context > wb-contains {
    display: block;
    background-color: rgba(255, 255, 255, 1.0);
    position: relative;
    padding-top: 7px;
    margin-left: 10px;
    margin-bottom: 0;
    padding-bottom: 1px;
    overflow-x: hidden;
    overflow-y: hidden;
    border-top-left-radius: 10px;
    border-bottom-left-radius: 10px;
    border-width: 2px 0 2px 2px;
    border-style: solid;
    border-color: inherit;
    border-right: 0;
    right: -3px;
}

wb-context > wb-contains:last-child:after {
    content: "";
    display: block;
    height: 0;
    clear: both;
    visibility: hidden;
}

wb-disclosure{
    position: relative;
}

wb-context > header > wb-disclosure:after{
    content: "▼";
    width: 1em;
    height: 1em;
    position: absolute;
    top: 5px;
    left: 0px;
    cursor: default;
}

wb-context[closed] > header > wb-disclosure:after{
    content: "▶";
}

wb-context[closed] > wb-contains{
    display: none;
}

.hide{
    display: none;
}

/* almost hide, but leave enough that it still has a bounding box */
.singularity{
    max-height: 1px;
    overflow: hidden;
}

wb-value > input{
padding-left:20px;
background:  #FFFFFF no-repeat 3px 3px;

}

wb-value[type=any] >input{padding-left:5px;}
wb-value[type*=","][value] >input{padding-left: 60px;}
wb-value[type*=number] > input{background-image: url(../images/icon/math.svg);}
wb-value[type*=color] > input{background-image: url(../images/icon/color.svg);}
wb-value[type*=text] > input{background-image: url(../images/icon/text.svg);}
wb-value[type*=boolean] > input{background-image: url(../images/icon/boolean.svg);}
wb-value[type*=sprite] > input{background-image: url(../images/icon/sprite.svg);}
wb-value[type*=sound] > input{background-image: url(../images/icon/sound.svg);}
wb-value[type*=array] > input{background-image: url(../images/icon/array.svg);}
wb-value[type*=image] > input{background-image: url(../images/icon/image.svg);}
wb-value[type*=shape] > input{background-image: url(../images/icon/shape.svg);}
wb-value[type*=vector] > input{background-image: url(../images/icon/vector.svg);}
wb-value[type*=object] > input{background-image: url(../images/icon/object.svg);}
wb-value[type*=path] > input{background-image: url(../images/icon/path.svg);}
wb-value[type*=point] > input{background-image: url(../images/icon/point.svg);}
wb-value[type*=rect] > input{background-image: url(../images/icon/rect.svg);}
wb-value[type*=string] > input{background-image: url(../images/icon/string.svg);}
wb-value[type*=text] > input{background-image: url(../images/icon/text.svg);}
wb-value[type*=geolocation] > input{ background-image: url(../images/icon/geolocation.svg);}
wb-value[type*=size] > input{ background-image: url(../images/icon/size.svg);}

wb-value[type*=array][type*=string] > input{
    background-image: url(../images/icon/array.svg), url(../images/icon/string.svg);
    background-position: 3px 3px, 20px 3px;
}
wb-value[type*=number][type*=vector] > input{
    background-image: url(../images/icon/math.svg), url(../images/icon/vector.svg);
    background-position: 3px 3px, 20px 3px;
}
wb-value[type*=text][type*=string] > input{
    background-image: url(../images/icon/text.svg), url(../images/icon/string.svg);
    background-position: 3px 3px, 20px 3px;
}
wb-value[type*=point][type*=vector] > input{
    background-image: url(../images/icon/point.svg), url(../images/icon/vector.svg);
    background-position: 3px 3px, 20px 3px;
}
wb-value[type*=image][type*=shape][type*=sprite] > input{
    background-image: url(../images/icon/image.svg), url(../images/icon/shape.svg), url(../images/icon/sprite.svg);
    background-position: 3px 3px, 20px 3px, 37px 3px;
}
wb-value[type*=number][type*=vector][type*=array] > input{
    background-image: url(../images/icon/math.svg), url(../images/icon/vector.svg), url(../images/icon/array.svg);
    background-position: 3px 3px, 20px 3px, 37px 3px;
}

wb-workspace wb-value[selected=true] > input{border-color: blue}
wb-expression:before{
    content: '';
    width: 15px;
    height: 15px;
    display: block;
    float: left;
    margin-left: 5px;
    margin-top: 5px;
    background-size: contain;
    /* Over-ride background-image for each type of expression */
}
wb-expression[type=number]:before{ background-image: url(../images/icon/math.svg); }
wb-expression[type=color]:before{ background-image: url(../images/icon/color.svg); }
wb-expression[type=text]:before{ background-image: url(../images/icon/text.svg); }
wb-expression[type=boolean]:before{ background-image: url(../images/icon/boolean.svg); }
wb-expression[type=sprite]:before{ background-image: url(../images/icon/sprite.svg); }
wb-expression[type=any]:before{ background-image: url(../images/icon/control.svg); }
wb-expression[type=sound]:before{ background-image: url(../images/icon/sound.svg); }
wb-expression[type=array]:before{ background-image: url(../images/icon/array.svg); }
wb-expression[type=wb-image]:before{ background-image: url(../images/icon/image.svg); }
wb-expression[type=shape]:before{ background-image: url(../images/icon/shape.svg); }
wb-expression[type=vector]:before{ background-image: url(../images/icon/vector.svg); }
wb-expression[type=object]:before{ background-image: url(../images/icon/object.svg); }
wb-expression[type=path]:before{ background-image: url(../images/icon/path.svg); }
wb-expression[type=point]:before{ background-image: url(../images/icon/point.svg); }
wb-expression[type=rect]:before{ background-image: url(../images/icon/rect.svg); }
wb-expression[type=string]:before{ background-image: url(../images/icon/string.svg); }
wb-expression[type=geolocation]:before{ background-image: url(../images/icon/geolocation.svg); }
wb-expression[type=size]:before{ background-image: url(../images/icon/size.svg);}

/* block background colour by category*/
wb-expression.control, wb-step.control, wb-context.control{ background-color: hsl(0, 93%, 56%); border-color: hsl(0, 93%, 40%); }
wb-expression.sprite, wb-step.sprite, wb-context.sprite{ background-color: hsl(156, 93%, 56%); border-color: hsl(156, 93%, 40%); }
wb-expression.music, wb-step.music, wb-context.music{ background-color: hsl(312, 93%, 56%); border-color: hsl(312, 93%, 40%); }
wb-expression.sound, wb-step.sound, wb-context.sound{ background-color: hsl(108, 93%, 56%); border-color: hsl(108, 93%, 40%);}
wb-expression.array, wb-step.array, wb-context.array{ background-color: hsl(264, 93%, 56%); border-color: hsl(264, 93%, 40%);}
wb-expression.boolean, wb-step.boolean, wb-context.boolean{ background-color: hsl(60, 93%, 56%); border-color: hsl(60, 93%, 40%);}
wb-expression.canvas, wb-step.canvas, wb-context.canvas{ background-color: hsl(216, 93%, 56%); border-color: hsl(216, 93%, 40%);}
wb-expression.color, wb-step.color, wb-context.color{ background-color: hsl(12, 93%, 56%); border-color: hsl(12, 93%, 40%);}
wb-expression.image, wb-step.image, wb-context.image{ background-color: hsl(168, 93%, 56%); border-color: hsl(168, 93%, 40%);}
wb-expression.math, wb-step.math, wb-context.math{ background-color: hsl(324, 93%, 56%); border-color: hsl(324, 93%, 40%);}
wb-expression.random, wb-step.random, wb-context.random{ background-color: hsl(120, 93%, 56%); border-color: hsl(120, 93%, 40%);}
wb-expression.vector, wb-step.vector, wb-context.vector{ background-color: hsl(276, 93%, 56%); border-color: hsl(276, 93%, 40%);}
wb-expression.object, wb-step.object, wb-context.object{ background-color: hsl(72, 93%, 56%); border-color: hsl(72, 93%, 40%);}
wb-expression.string, wb-step.string, wb-context.string{ background-color: hsl(228, 93%, 56%); border-color: hsl(228, 93%, 40%);}
wb-expression.path, wb-step.path, wb-context.path{ background-color: hsl(24, 93%, 56%); border-color: hsl(24, 93%, 40%);}
wb-expression.point, wb-step.point, wb-context.point{ background-color: hsl(180, 93%, 56%); border-color: hsl(180, 93%, 40%);}
wb-expression.rect, wb-step.rect, wb-context.rect{ background-color: hsl(336, 93%, 56%); border-color: hsl(336, 93%, 40%);}
wb-expression.input, wb-step.input, wb-context.input{ background-color: hsl(132, 93%, 56%); border-color: hsl(132, 93%, 40%);}
wb-expression.motion, wb-step.motion, wb-context.motion{ background-color: hsl(288, 93%, 56%); border-color: hsl(288, 93%, 40%);}
wb-expression.shape, wb-step.shape, wb-context.shape{ background-color: hsl(84, 93%, 56%); border-color: hsl(84, 93%, 40%);}
wb-expression.geolocation, wb-step.geolocation, wb-context.geolocation{ background-color: hsl(240, 93%, 56%); border-color: hsl(240, 93%, 40%);}
wb-expression.size, wb-step.size, wb-context.size{ background-color: hsl(192, 93%, 56%); border-color: hsl(192, 93%, 40%);}
wb-expression.text, wb-step.text, wb-context.text{ background-color: hsl(348, 93%, 56%); border-color: hsl(348, 93%, 40%);}

/* block background colour by return type */
wb-expression[type=number], wb-local wb-expression[type=number]{ background-color: hsl(324, 93%, 56%); border-color: hsl(324, 93%, 40%); }
wb-expression[type=color],wb-local wb-expression[type=color]{ background-color: hsl(12, 93%, 56%); border-color: hsl(12, 93%, 40%); }
wb-expression[type=text],wb-local wb-expression[type=text]{ background-color: hsl(348, 93%, 56%); border-color: hsl(348, 93%, 40%); }
wb-expression[type=boolean],wb-local wb-expression[type=boolean]{ background-color: hsl(60, 93%, 56%); border-color: hsl(60, 93%, 40%); }
wb-expression[type=sprite],wb-local wb-expression[type=sprite]{ background-color: hsl(156, 93%, 56%); border-color: hsl(156, 93%, 40%); }
wb-expression[type=any],wb-local wb-expression[type=any]{ background-color: hsl(0, 93%, 56%); border-color: hsl(0, 93%, 40%); }
wb-expression[type=sound],wb-local wb-expression[type=sound]{ background-color: hsl(108, 93%, 56%); border-color: hsl(108, 93%, 40%); }
wb-expression[type=array],wb-local wb-expression[type=array]{ background-color: hsl(264, 93%, 56%); border-color: hsl(264, 93%, 40%); }
wb-expression[type=wb-image],wb-local wb-expression[type=wb-image]{ background-color: hsl(168, 93%, 56%); border-color: hsl(168, 93%, 40%); }
wb-expression[type=shape],wb-local wb-expression[type=shape]{ background-color: hsl(84, 93%, 56%); border-color: hsl(84, 93%, 40%); }
wb-expression[type=vector],wb-local wb-expression[type=vector]{ background-color: hsl(276, 93%, 56%); border-color: hsl(276, 93%, 40%); }
wb-expression[type=object],wb-local wb-expression[type=object]{ background-color: hsl(72, 93%, 56%); border-color: hsl(72, 93%, 40%); }
wb-expression[type=path],wb-expression[type=pathset],wb-local wb-expression[type=path],wb-step[type=path]{ background-color: hsl(24, 93%, 56%); border-color: hsl(24, 93%, 40%); }
wb-expression[type=point],wb-local wb-expression[type=point]{ background-color: hsl(180, 93%, 56%); border-color: hsl(180, 93%, 40%); }
wb-expression[type=rect],wb-local wb-expression[type=rect]{ background-color: hsl(336, 93%, 56%); border-color: hsl(336, 93%, 40%); }
wb-expression[type=string],wb-local wb-expression[type=string]{ background-color: hsl(228, 93%, 56%); border-color: hsl(228, 93%, 40%); }
wb-expression[type=geolocation]{ background-color: hsl(240, 93%, 56%); border-color: hsl(240, 93%, 40%); }
wb-expression[type=size]{background-color: hsl(192, 93%, 56%); border-color: hsl(192, 93%, 40%);}
wb-expression[type=motion]{background-color: hsl(288, 93%, 56%); border-color: hsl(288, 93%, 40%);}




/* Used for input resizing */
.sekrit-svg{
    position: absolute;
    left: -1000px; /* cannot get size if display: none */
    top: 0; /* because it was screwing up layout even hidden */
    width: 400px;
    height: 100px;
}

.wb-icons{
    display: none;
}


